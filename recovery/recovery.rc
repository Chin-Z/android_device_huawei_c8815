import /init.recovery.${ro.hardware}.rc

on early-init
    start ueventd

on init
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /boot
    mkdir /recovery
    mkdir /sdcard
    mkdir /internal_sd
    mkdir /external_sd
    mkdir /sd-ext
    mkdir /datadata
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 1038
    write /sys/class/android_usb/android0/functions mass_storage,adb 
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/f_mass_storage/nluns 2
    write /sys/class/android_usb/android0/f_mass_storage/cdrom_index none

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service offmode_check /sbin/offmode_check
    oneshot
	
service rmt_storage /sbin/rmt_storage
	
service ueventd /sbin/ueventd
    critical
	
service offmode_charge /sbin/offmode_charge
    disabled

service recovery /sbin/recovery
    disabled

service adbd /sbin/adbd recovery
    disabled

service rmt_oeminfo /sbin/rmt_oeminfo
    class main
    user root
    oneshot
on property:init.svc.charge=stopped
    start recovery
    write /sys/devices/platform/pmic-leds/leds/button-backlight/brightness 25

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
